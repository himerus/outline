# This is a basic workflow to help you get started with Actions

name: Outline Core Build

# Controls when the workflow will run
on:
  # Which branches to test on push/merge.
  push:
    branches:
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
  # Which branches to test on pull request.
  pull_request:
    branches:
      - main
      - next
      - dev
      - alpha
      - beta
      - rc
      - /^issue/
      - /^task/
      - /^feature/
      - /^bug/
      - /^test/

# The jobs for the build workflow.
jobs:
  # Basic setup job to prepare codebase.
  setup:
    name: Installation & Caching
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 16, 18 ]
    # The steps for the setup job.
    steps:
      # @see https://github.com/marketplace/actions/checkout
      - name: Checkout Codebase
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://npm.pkg.github.com'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # @see https://github.com/marketplace/actions/cache
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-yarn-

      # @todo: Remove this test step.
      - name: "DEBUG: YARN VERSION"
        run: yarn --version

      # @todo: Remove this test step.
      # - name: "DEBUG: .npmrc CONTENTS"
      #   run: cat .npmrc

      - name: Install
        run: yarn install
        env: 
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: yarn build --force

  # # Job to run build, and basic assurances the codebase is ready for additional processing.
  # build:
  #   name: Build Codebase
  #   runs-on: ubuntu-latest
  #   needs: ['setup']
  #   strategy:
  #     matrix:
  #       node: [ 14, 16, 18 ]
  #   # The steps for the setup job.
  #   steps:
  #     # @see https://github.com/marketplace/actions/checkout
  #     - name: Checkout Codebase
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     # @see https://github.com/marketplace/actions/cache
  #     - uses: actions/cache@v3
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           node_modules
  #         key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ matrix.node }}-yarn-

  #     # @todo: Remove this test step.
  #     - name: "DEBUG: YARN VERSION"
  #       run: yarn --version

  #     - name: Install from cache
  #       run: yarn install

  #     - name: Build from cache
  #       run: yarn build

  # # Job to run package publishing process.
  # test:
  #   name: Test Codebase
  #   runs-on: ubuntu-latest
  #   needs: ['build']
  #   strategy:
  #     matrix:
  #       node: [ 14, 16, 18 ]
  #   # The steps for the setup job.
  #   steps:
  #     # @see https://github.com/marketplace/actions/checkout
  #     - name: Checkout Codebase
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node }}

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     # @see https://github.com/marketplace/actions/cache
  #     - uses: actions/cache@v3
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           node_modules
  #         key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ matrix.node }}-yarn-

  #     # @todo: Remove this test step.
  #     - name: "DEBUG: YARN VERSION"
  #       run: yarn --version

  # # Job to run package publishing process.
  # # This should ONLY be ran on on branches where 
  # publish:
  #   name: Publish NPM Packages
  #   runs-on: ubuntu-latest
  #   needs: ['build', 'test']

  #   # The steps for the build job.
  #   steps:
  #     # @see https://github.com/marketplace/actions/checkout
  #     - name: Checkout codebase
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'
  #         registry-url: 'https://npm.pkg.github.com'
  #         # Defaults to the user or organization that owns the workflow file
  #         scope: '@phase2'

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     # @see https://github.com/marketplace/actions/cache
  #     - uses: actions/cache@v3
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           node_modules
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-

  #     # @todo: Remove this test step.
  #     - name: "DEBUG: YARN VERSION"
  #       run: yarn --version

  #     - name: Install from cache
  #       run: yarn install

  #     - name: Build from cache
  #       run: yarn build

  #     # - name: Publish
  #     #   run: yarn package -v
  #     #   env:
  #     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
