{"version":3,"file":"outline-accordion.test.js","sourceRoot":"","sources":["outline-accordion.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,IAAI,SAAS,EAAE,MAAM,sBAAsB,CAAC;AAErE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAErD,MAAM,oBAAoB,GAAG,mBAAmB,CAAC;AACjD,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;AAEnD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,MAAM,aAAa,GAAG,GAAG,EAAE;QACzB,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAClD,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;QAC7C,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;QAEtD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC,CAAC;IAEF,MAAM,CAAC,GAAG,EAAE;QACV,aAAa,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;QAEtE,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAC9C,oBAAoB,CACR,CAAC;QACf,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAU,CAAC;QACxE,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACjD,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC7C,YAAY,CAAC,SAAS,GAAG,eAAe,CAAC;QACzC,YAAY,CAAC,SAAS;YACpB,yOAAyO,CAAC;QAC5O,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACnC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACnC,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC7C,iBAAiB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAExC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAExC,SAAS,CACP,GAAG,EAAE,CAAC,iBAAiB,CAAC,YAAY,KAAK,IAAI,EAC7C,qBAAqB,CACtB,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { OutlineAccordion as Accordion } from '../outline-accordion';\nimport { OutlineAccordionPanel as Panel } from '../../outline-accordion-panel/outline-accordion-panel';\nimport { expect, waitUntil } from '@open-wc/testing';\n\nconst AccordionElementName = 'outline-accordion';\nconst PanelElementName = 'outline-accordion-panel';\n\ndescribe(AccordionElementName, () => {\n  const addBaseStyles = () => {\n    const defaultCSS = document.createElement('link');\n    defaultCSS.setAttribute('rel', 'stylesheet');\n    defaultCSS.setAttribute('href', '/outline.theme.css');\n\n    document.head.append(defaultCSS);\n  };\n\n  before(() => {\n    addBaseStyles();\n  });\n\n  it('Make sure to load necessary component JS', () => {\n    const componentElement = document.createElement(AccordionElementName);\n\n    expect(componentElement).is.instanceOf(Accordion);\n  });\n\n  it('Panels slot content.', () => {\n    const accordionInstance = document.createElement(\n      AccordionElementName\n    ) as Accordion;\n    const panelInstance = document.createElement(PanelElementName) as Panel;\n    const panelHeading = document.createElement('span');\n    const panelContent = document.createElement('p');\n    panelHeading.setAttribute('slot', 'heading');\n    panelHeading.innerText = 'Panel Heading';\n    panelContent.innerText =\n      'Aliquam eu nunc. Aenean vulputate eleifend tellus. Nam ipsum risus, rutrum vitae, vestibulum eu, molestie vel, lacus. Suspendisse enim turpis, dictum sed, iaculis a, condimentum nec, nisi. Praesent nec nisl a purus blandit viverra.';\n    panelInstance.append(panelHeading);\n    panelInstance.append(panelContent);\n    panelInstance.setAttribute('slot', 'panels');\n    accordionInstance.append(panelInstance);\n\n    document.body.append(accordionInstance);\n\n    waitUntil(\n      () => accordionInstance.assignedSlot !== null,\n      'Message is slotted.'\n    );\n  });\n});\n"]}